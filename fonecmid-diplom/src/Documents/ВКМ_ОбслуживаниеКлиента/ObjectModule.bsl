#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВКМ_Договор, "ВидДоговора, ВКМ_ДатаНачала, ВКМ_ДатаОкончания");
	Если Данные.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_Абонент") Тогда
		ОбщегоНазначения.СообщитьПользователю("Выберите абонентский договор");
		Отказ = Истина;
	КонецЕсли;
	Если Дата < Данные.ВКМ_ДатаНачала Или Дата > Данные.ВКМ_ДатаОкончания Тогда
		ОбщегоНазначения.СообщитьПользователю("Документ вне срока договора");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтавкаЧаса КАК СтавкаЧаса,
				   |	СУММА(ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплате) КАК ЧасыКОплате,
				   |	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист КАК Специалист
				   |ПОМЕСТИТЬ ВТ_Документ
				   |ИЗ
				   |	Документ.ВКМ_ОбслуживаниеКлиента.ВКМ_ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
				   |		ПО ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка
				   |ГДЕ
				   |	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
				   |СГРУППИРОВАТЬ ПО
				   |	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтавкаЧаса,
				   |	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник КАК Сотрудник,
				   |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот КАК ПроцентОтРабот
				   |ПОМЕСТИТЬ ВТ_УсловияОплаты
				   |ИЗ
				   |	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, ВКМ_Сотрудник = &Специалист) КАК
				   |		ВКМ_УсловияОплатыСотрудниковСрезПоследних
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_Документ.СтавкаЧаса,
				   |	ВТ_Документ.ЧасыКОплате,
				   |	ВТ_УсловияОплаты.ПроцентОтРабот КАК ПроцентОтРабот
				   |ИЗ
				   |	ВТ_Документ КАК ВТ_Документ
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УсловияОплаты КАК ВТ_УсловияОплаты
				   |		ПО ВТ_Документ.Специалист = ВТ_УсловияОплаты.Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Специалист", ВКМ_Специалист);

	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл

		Если Результат.ПроцентОтРабот = Null Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
				"Сотруднику %1 не указан процент от работ в условиях оплаты.", ВКМ_Специалист));
			Отказ = Истина;
			Возврат;
		Иначе
	
		//регистр ВКМ_ВыполненныеКлиентуРаботы 
			Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.Период = Дата;
			Движение.ВКМ_Клиент = ВКМ_Клиент;
			Движение.ВКМ_Договор = ВКМ_Договор;
			Движение.ВКМ_КоличествоЧасов = Результат.ЧасыКОплате;
			Движение.ВКМ_СуммаКОплате = Результат.ЧасыКОплате * Результат.СтавкаЧаса;
		
		//регистр ВКМ_ВыполненныеСотрудникомРаботы
			Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
			Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
			Движение.Период = Дата;
			Движение.ВКМ_Сотрудник = ВКМ_Специалист;
			Движение.ВКМ_ЧасовКОплате = Результат.ЧасыКОплате;
			Движение.ВКМ_СуммаКОплате = (Результат.ЧасыКОплате * Результат.СтавкаЧаса * Результат.ПроцентОтРабот) / 100;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
    //Вторая ошибка в списке:
	//Было:
	//Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_ДатаПроведенияРабот") <> ВКМ_ДатаПроведенияРабот
	//	Или ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_ВремяНачалаРабот") <> ВКМ_ВремяНачалаРабот
	//	Или ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_Специалист") <> ВКМ_Специалист Тогда 
	//Стало:

	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"ВКМ_ДатаПроведенияРабот, ВКМ_ВремяНачалаРабот, ВКМ_Специалист"); 
	
	Если РеквизитыОбъекта.ВКМ_ДатаПроведенияРабот <> ВКМ_ДатаПроведенияРабот
		Или РеквизитыОбъекта.ВКМ_ВремяНачалаРабот <> ВКМ_ВремяНачалаРабот
		Или РеквизитыОбъекта.ВКМ_Специалист <> ВКМ_Специалист Тогда 
		ЗаказИзменен = Истина;
	Иначе
		ЗаказИзменен = Ложь;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЗаказИзменен", ЗаказИзменен);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.ЭтоНовый Тогда

		Сообщение = СтрШаблон("Новый заказ №%1 Исполнитель %2. Дата %3 интервал работ %4 - %5", Номер, ВКМ_Специалист,
			Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(
			ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		ДокОбъект = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		ДокОбъект.ВКМ_ТекстСоббщения = Сообщение;
		ДокОбъект.Записать();

	ИначеЕсли ДополнительныеСвойства.ЗаказИзменен Тогда

		Сообщение = СтрШаблон("Заказ №%1 изменен. Исполнитель %2. Дата %3 интервал работ %4 - %5", Номер,
			ВКМ_Специалист, Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(
			ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		ДокОбъект = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		ДокОбъект.ВКМ_ТекстСоббщения = Сообщение;
		ДокОбъект.Записать();

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли